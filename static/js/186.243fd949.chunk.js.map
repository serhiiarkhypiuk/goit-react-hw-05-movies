{"version":3,"file":"static/js/186.243fd949.chunk.js","mappings":"oLACA,EAAuB,uB,SCGR,SAASA,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACjC,OAAO,eAAIC,UAAWC,EAAf,SAA6BF,GACrC,C,qICAc,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,QAApB,GACzC,GAAE,CAACT,KAGF,iCACE,oCAECG,IACC,SAAC,IAAD,UACGA,EAAQO,OAAS,EAChBP,EAAQQ,KAAI,SAAAC,GAAM,OAChB,2BACE,wBACE,oCAAYA,EAAOC,aAErB,uBAAID,EAAOE,YAJJF,EAAOG,GADA,KASlB,SAAC,UAAD,CAAcC,KAAK,sCAM9B,C,sLCpCKC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,2DAAD,OACgCD,GAE9D,CAEM,SAASY,EAAWC,GACzB,OAAOZ,EAAuB,qDAAD,OAC0BD,EAD1B,4DACiFa,GAE/G,CAEM,SAASC,EAAkBC,GAChC,OAAOd,EAAuB,sCAAD,OACWc,EADX,oBAC+Bf,EAD/B,mBAG9B,CAEM,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,sCAAD,OACWc,EADX,4BACuCf,EADvC,mBAG9B,CAEM,SAASiB,EAAkBF,GAChC,OAAOd,EAAuB,sCAAD,OACWc,EADX,4BACuCf,EADvC,0BAG9B,C,uFClCc,SAASkB,EAAT,GAAiC,IAATnB,EAAQ,EAARA,KACrC,OAAO,wBAAKA,GACb,C","sources":["webpack://react-homework-template/./src/components/GridList/GridList.module.css?d1e7","components/GridList/GridList.jsx","components/Reviews/Reviews.jsx","services/movies-api.js","views/NotFound.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"GridList_grid__i85Yc\"};","import React from 'react';\nimport styles from './GridList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function GridList({ children }) {\n  return <ul className={styles.grid}>{children}</ul>;\n}\n\nGridList.propTypes = {\n  children: PropTypes.node,\n};\n","import * as api from '../../services/movies-api';\nimport { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport GridList from 'components/GridList/GridList';\nimport NotFoundView from 'views/NotFound';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    api.fetchMovieReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n\n      {reviews && (\n        <GridList>\n          {reviews.length > 0 ? (\n            reviews.map(review => (\n              <li key={review.id}>\n                <p>\n                  <b>Author: {review.author}</b>\n                </p>\n                <p>{review.content}</p>\n              </li>\n            ))\n          ) : (\n            <NotFoundView text=\"No reviews for this movie yet\" />\n          )}\n        </GridList>\n      )}\n    </>\n  );\n}\n","const KEY = 'f16772f2af0be9f113024bcab02efac7';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovie(movieName) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${movieName}`\n  );\n}\n\nexport function fetchMovieDetails(movie_id) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movie_id) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movie_id) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function NotFoundView({ text }) {\n  return <h1>{text}</h1>;\n}\n\nNotFoundView.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n"],"names":["GridList","children","className","styles","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","api","then","data","results","length","map","review","author","content","id","text","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovie","movieName","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","NotFoundView"],"sourceRoot":""}