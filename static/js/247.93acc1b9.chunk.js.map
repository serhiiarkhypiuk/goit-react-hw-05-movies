{"version":3,"file":"static/js/247.93acc1b9.chunk.js","mappings":"qPAMe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKL,KAAjB,GACzC,GAAE,CAACH,KAGF,iCACE,iCAECG,IACC,SAAC,IAAD,UACGA,EAAKM,OAAS,EACbN,EAAKO,KAAI,SAAAC,GAAM,OACb,2BACE,gBACEC,MAAO,CAAEC,MAAO,SAChBC,IAC0B,OAAxBH,EAAOI,aAAP,yCACsCJ,EAAOI,cACzC,uFAENC,IAAKL,EAAOM,QAEd,uBAAIN,EAAOM,QACX,uCAAeN,EAAOO,eAXfP,EAAOQ,GADH,KAgBf,SAAC,IAAD,CAAcC,KAAK,wCAM9B,C,gEC1CD,EAAuB,uB,SCGR,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACjC,OAAO,eAAIC,UAAWC,EAAf,SAA6BF,GACrC,C,sLCNKG,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,2DAAD,OACgCD,GAE9D,CAEM,SAASY,EAAWC,GACzB,OAAOZ,EAAuB,qDAAD,OAC0BD,EAD1B,4DACiFa,GAE/G,CAEM,SAASC,EAAkBC,GAChC,OAAOd,EAAuB,sCAAD,OACWc,EADX,oBAC+Bf,EAD/B,mBAG9B,CAEM,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,sCAAD,OACWc,EADX,4BACuCf,EADvC,mBAG9B,CAEM,SAASiB,EAAkBF,GAChC,OAAOd,EAAuB,sCAAD,OACWc,EADX,4BACuCf,EADvC,0BAG9B,C,0EClCc,SAASkB,EAAT,GAAiC,IAATvB,EAAQ,EAARA,KACrC,OAAO,wBAAKA,GACb,C","sources":["components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/GridList/GridList.module.css?d1e7","components/GridList/GridList.jsx","services/movies-api.js","views/NotFound.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport * as api from '../../services/movies-api';\nimport GridList from 'components/GridList/GridList';\nimport NotFoundView from 'views/NotFound';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    api.fetchMovieCredits(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Cast</h2>\n\n      {cast && (\n        <GridList>\n          {cast.length > 0 ? (\n            cast.map(person => (\n              <li key={person.id}>\n                <img\n                  style={{ width: '185px' }}\n                  src={\n                    person.profile_path !== null\n                      ? `https://image.tmdb.org/t/p/w185${person.profile_path}`\n                      : 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png'\n                  }\n                  alt={person.name}\n                />\n                <p>{person.name}</p>\n                <p>Character: {person.character}</p>\n              </li>\n            ))\n          ) : (\n            <NotFoundView text=\"No information about the actors\" />\n          )}\n        </GridList>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"GridList_grid__i85Yc\"};","import React from 'react';\nimport styles from './GridList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function GridList({ children }) {\n  return <ul className={styles.grid}>{children}</ul>;\n}\n\nGridList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","const KEY = 'f16772f2af0be9f113024bcab02efac7';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovie(movieName) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${movieName}`\n  );\n}\n\nexport function fetchMovieDetails(movie_id) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movie_id) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movie_id) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function NotFoundView({ text }) {\n  return <h1>{text}</h1>;\n}\n\nNotFoundView.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","api","then","data","length","map","person","style","width","src","profile_path","alt","name","character","id","text","GridList","children","className","styles","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovie","movieName","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","NotFoundView"],"sourceRoot":""}